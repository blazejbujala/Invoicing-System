buildscript {
	ext {
		flywayVersion = '8.5.2'
		h2Version = '2.1.210'
		lombokVersion = "1.18.22"
		mapStructVersion = "1.3.1.Final"
		postgresqlVersion = '42.3.3'
		spockVersion = '2.1-groovy-3.0'
		springBootVersion = "2.6.3"
		springDependencyManagementVersion = "1.0.11.RELEASE"
		springFoxStarterVersion = '1.6.6'
		springBootStarter = '2.6.6'
	}
}

plugins {
	id 'application'
	id 'checkstyle'
	id 'groovy'
	id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
	id 'jacoco'
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
}

group = 'com.fc'
version = '0.0.1'

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"

	compileOnly "org.projectlombok:lombok:${lombokVersion}"

	implementation "org.flywaydb:flyway-core:${flywayVersion}"
	implementation "org.springdoc:springdoc-openapi-ui:${springFoxStarterVersion}"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootStarter}"
	implementation "org.springframework.boot:spring-boot-starter-web:${springBootStarter}"
	implementation "org.springframework.boot:spring-boot-starter-jdbc:${springBootStarter}"
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'
	implementation "org.mapstruct:mapstruct:${mapStructVersion}"


	runtimeOnly "org.postgresql:postgresql:${postgresqlVersion}"

	testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"

	testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

	testImplementation "com.h2database:h2:${h2Version}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.4'
	testImplementation "org.spockframework:spock-core:${spockVersion}"
	testImplementation "org.spockframework:spock-spring:${spockVersion}"
}

application {
	mainClass = 'pl.futurecollars.invoicing.App'
}

checkstyle {
	showViolations = true
	ignoreFailures = false
	maxWarnings = 0
	maxErrors = 0
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.7
			}
		}
	}
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
		vendor = JvmVendorSpec.ADOPTOPENJDK
	}
}

tasks.named('test') {
	useJUnitPlatform()

}

test {
	finalizedBy jacocoTestReport
	finalizedBy jacocoTestCoverageVerification
}